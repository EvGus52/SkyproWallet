import { useNavigate } from "react-router-dom";
import { signOut } from "../../services/Auth";
import { useTransactions } from "../../contexts/TransactionsContextProvider";
import {
  LogoutContainer,
  LogoutCard,
  LogoutIcon,
  LogoutTitle,
  LogoutMessage,
  ButtonGroup,
  ConfirmButton,
  CancelButton,
} from "./Logout.styled";

const Logout = () => {
  const navigate = useNavigate();
  const { clearTransactions } = useTransactions();

  const handleLogout = async () => {
    try {
      const token = localStorage.getItem("token");

      if (token) {
        // –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        await signOut(token);
      }

      // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem("token");
      clearTransactions();

      navigate("/login");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ:", error);
      // –î–∞–∂–µ –µ—Å–ª–∏ API –≤—ã–∑–æ–≤ –Ω–µ —É–¥–∞–ª—Å—è, –æ—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
      localStorage.removeItem("token");
      clearTransactions();
      navigate("/login");
    }
  };

  const handleCancel = () => {
    navigate("/my-expenses");
  };

  return (
    <LogoutContainer>
      <LogoutCard>
        <LogoutIcon>üëã</LogoutIcon>
        <LogoutTitle>–í—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</LogoutTitle>
        <LogoutMessage>
          –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Skypro.Wallet?
          <br />
          –í—Å–µ –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.
        </LogoutMessage>

        <ButtonGroup>
          <CancelButton onClick={handleCancel}>–û—Ç–º–µ–Ω–∞</CancelButton>
          <ConfirmButton onClick={handleLogout}>–í—ã–π—Ç–∏</ConfirmButton>
        </ButtonGroup>
      </LogoutCard>
    </LogoutContainer>
  );
};

export default Logout;
